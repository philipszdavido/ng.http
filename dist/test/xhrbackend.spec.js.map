{"version":3,"file":"xhrbackend.spec.js","sourceRoot":"","sources":["../../test/xhrbackend.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,OAAO,EAAE,MAAM,EAAC,MAAM,uBAAuB,CAAC;AAEtD,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,4BAA4B,CAAC;AACnF,OAAO,EAAC,cAAc,EAAC,MAAM,sBAAsB,CAAA;AAEnD,QAAQ,CAAC,YAAY,EAAE;IACtB,UAAU,CAAC;QACR,OAAO,CAAC,sBAAsB,CAAC;YAC7B,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAC;gBAC/C;oBACI,OAAO,EAAC,UAAU;oBAClB,UAAU,EAAE,UAAC,UAAqB;wBAC9B,MAAM,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,CAAA;qBACpC;oBACD,IAAI,EAAC,CAAC,UAAU,CAAC;iBACpB;aACF;SACF,CAAC,CAAC;KACL,CAAC,CAAC;IACH,EAAE,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC,UAAU,CAAC,EAAE,UAAC,GAAe;QAC1D,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;KAC1B,CAAC,CAAC,CAAC;IACL,EAAE,CAAC,sCAAsC,EAAE,MAAM,CAAC,CAAC,UAAU,CAAC,EAAE,UAAC,GAAe;QAC7E,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC/C,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,CAAC,YAAY,aAAa,CAAC,CAAC,UAAU,EAAE,CAAC;KACxE,CAAC,CAAC,CAAC;CACL,CAAC,CAAA","sourcesContent":["import {TestBed, inject} from '@angular/core/testing';\r\n\r\nimport { XHRBackend, XHRConnection, XHRBrowser } from '../src/backend/xhr_backend';\r\nimport {MockXHRBrowser} from './xhrconnection.spec'\r\n\r\ndescribe('XHRBackend', () => {\r\n beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      providers: [\r\n        {provide: XHRBrowser, useClass: MockXHRBrowser},\r\n        {\r\n            provide:XHRBackend, \r\n            useFactory: (xHRBRowser:XHRBrowser) => {\r\n                return new XHRBackend(xHRBRowser)\r\n            },\r\n            deps:[XHRBrowser]\r\n        }\r\n      ]\r\n    });\r\n });\r\n it('should be created', inject([XHRBackend], (xhr: XHRBackend) => {\r\n    expect(xhr).toBeTruthy();\r\n  }));\r\n it('should return XHRConnection instance', inject([XHRBackend], (xhr: XHRBackend) => {\r\n    expect(xhr.createConnection({})).not.toThrow();\r\n    expect(xhr.createConnection({}) instanceof XHRConnection).toBeTruthy();\r\n  }));\r\n})"]}