{"version":3,"file":"Http.js","sourceRoot":"","sources":["../../src/Http.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAElC,IAAA;IACI;KAAgB;IAChB,sBAAO,GAAP,UAAQ,cAA8B;QAClC,MAAM,CAAC,IAAI,UAAU,CAAC,UAAU,QAAa;YAE1C,IAAI,WAAW,GAAG,IAAI,cAAc,EAAE,CAAA;YACtC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAC,cAAc,CAAC,GAAG,CAAC,CAAA;YAE1D,WAAW,CAAC,MAAM,GAAG;gBAChB,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBAC5B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;oBACnC,QAAQ,CAAC,QAAQ,EAAE,CAAA;iBACtB;gBAAC,IAAI,CAAC,CAAC;oBACJ,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAA;iBACpD;aACL,CAAA;YAED,WAAW,CAAC,OAAO,GAAG;gBACjB,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAA;aAClD,CAAA;YAED,WAAW,CAAC,SAAS,GAAG;gBACnB,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC,CAAA;aAC9C,CAAA;YACD,WAAW,CAAC,IAAI,EAAE,CAAA;SACpB,CAAC,CAAA;KACL;IACD,kBAAG,GAAH,UAAK,GAAW,EAAE,OAAa;QAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,cAAc,CAAC,EAAC,GAAG,KAAA,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC,CAAA;KAChE;IACD,mBAAI,GAAJ,UAAM,GAAW,EAAE,IAAS,EAAE,OAAa;KAE1C;eAnCL;IAoCC,CAAA;AAjCD,gBAiCC","sourcesContent":["import { RequestOptions } from './RequestOptions';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class Http {\r\n    constructor() {}\r\n    request(requestOptions: RequestOptions): Observable<any> {\r\n        return new Observable(function (observer: any) {\r\n\r\n           let httpRequest = new XMLHttpRequest()\r\n           httpRequest.open(requestOptions.method,requestOptions.url) \r\n\r\n           httpRequest.onload = function () {\r\n                if (httpRequest.status == 200) {\r\n                    observer.next(httpRequest.response)\r\n                    observer.complete()\r\n                } else {\r\n                    observer.error(new Error(httpRequest.statusText))                    \r\n                }\r\n           }\r\n\r\n           httpRequest.onerror = function () {\r\n                observer.error(new Error(\"Error: HTTP error\"))               \r\n           }\r\n\r\n           httpRequest.ontimeout = function () {\r\n                observer.error(new Error('Error Timeout'))               \r\n           }\r\n           httpRequest.send()\r\n        })\r\n    }\r\n    get (url: string, options?: any) {\r\n        return this.request(new RequestOptions({url, method: 'GET'}))\r\n    }\r\n    post (url: string, body: any, options?: any) {\r\n\r\n    }\r\n}\r\n"]}